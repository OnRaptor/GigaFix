// <auto-generated />
using System;
using GigaFix.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GigaFix.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("GigaFix.Data.Application", b =>
                {
                    b.Property<int>("IdApplication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_application");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<decimal?>("Cost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("cost");

                    b.Property<DateOnly?>("DateAddition")
                        .HasColumnType("date")
                        .HasColumnName("date_addition");

                    b.Property<DateOnly?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    b.Property<int?>("IdTypeEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_type_equipment");

                    b.Property<int?>("IdTypeProblem")
                        .HasColumnType("int")
                        .HasColumnName("id_type_problem");

                    b.Property<string>("NameClient")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name_client");

                    b.Property<string>("NameEquipment")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name_equipment");

                    b.Property<int?>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number")
                        .HasComment("серийный номер");

                    b.Property<DateOnly?>("PeriodExecution")
                        .HasColumnType("date")
                        .HasColumnName("period_execution")
                        .HasComment("предварительная дата завершения");

                    b.Property<string>("Status")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("status");

                    b.Property<TimeOnly?>("TimeWork")
                        .HasColumnType("time")
                        .HasColumnName("time_work");

                    b.Property<string>("WorkStatus")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("work_status");

                    b.HasKey("IdApplication")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEmployee" }, "Fk_IdEmployee_idx");

                    b.HasIndex(new[] { "WorkStatus" }, "Fk_IdStageWork_idx");

                    b.HasIndex(new[] { "IdTypeEquipment" }, "Fk_id_type_equipment_idx");

                    b.HasIndex(new[] { "IdTypeProblem" }, "Fk_id_type_problem_idx");

                    b.ToTable("application", (string)null);
                });

            modelBuilder.Entity("GigaFix.Data.Notification", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("applicationId");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("message");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ApplicationId" }, "applicationId_FK_idx");

                    b.HasIndex(new[] { "UserId" }, "userId_FK_idx");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("GigaFix.Data.TypeEquipment", b =>
                {
                    b.Property<int>("IdTypeEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_type_equipment");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.HasKey("IdTypeEquipment")
                        .HasName("PRIMARY");

                    b.ToTable("type_equipment", (string)null);
                });

            modelBuilder.Entity("GigaFix.Data.TypeProblem", b =>
                {
                    b.Property<int>("IdTypeProblemt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_type_problemt")
                        .HasComment("тип неисправностей");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.HasKey("IdTypeProblemt")
                        .HasName("PRIMARY");

                    b.ToTable("type_problem", (string)null);
                });

            modelBuilder.Entity("GigaFix.Data.User", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("FullnameUser")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fullname_user");

                    b.Property<string>("Login")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("role");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("GigaFix.Data.Application", b =>
                {
                    b.HasOne("GigaFix.Data.User", "IdEmployeeNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("Fk_id_employee");

                    b.HasOne("GigaFix.Data.TypeEquipment", "IdTypeEquipmentNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("IdTypeEquipment")
                        .HasConstraintName("Fk_id_type_equipment");

                    b.HasOne("GigaFix.Data.TypeProblem", "IdTypeProblemNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("IdTypeProblem")
                        .HasConstraintName("Fk_id_type_problem");

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdTypeEquipmentNavigation");

                    b.Navigation("IdTypeProblemNavigation");
                });

            modelBuilder.Entity("GigaFix.Data.Notification", b =>
                {
                    b.HasOne("GigaFix.Data.Application", "Application")
                        .WithMany("Notifications")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("applicationId_FK");

                    b.HasOne("GigaFix.Data.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("userId_FK");

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GigaFix.Data.Application", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("GigaFix.Data.TypeEquipment", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("GigaFix.Data.TypeProblem", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("GigaFix.Data.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
